{"version":3,"sources":["nobubar.png","App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Container","_templateObject2","InputContainer","_templateObject3","Label","label","_templateObject4","Input","input","_templateObject5","Button","button","_templateObject6","Result","_templateObject7","FixedImage","img","_templateObject8","Footer","footer","_templateObject9","Link","a","_templateObject10","App","_useState","useState","_useState2","_slicedToArray","shotTime","setShotTime","_useState3","_useState4","outputGrams","setOutputGrams","_useState5","_useState6","inputGrams","setInputGrams","_useState7","_useState8","temperature","setTemperature","_useState9","_useState10","grindSize","_useState11","_useState12","pressure","setPressure","_useState13","_useState14","taste","setTaste","_useState15","_useState16","suggestion","setSuggestion","_useState17","_useState18","profiles","setProfiles","_useState19","_useState20","coffeeName","setCoffeeName","useEffect","savedProfiles","JSON","parse","localStorage","getItem","React","createElement","htmlFor","id","type","value","onChange","e","target","parseFloat","suggestionText","Fragment","onClick","newProfile","updatedProfiles","concat","_toConsumableArray","setItem","stringify","map","profile","index","key","href","src","logoBottom","alt","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2f484ad6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nobubar.4ccb3836.png\";","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport logoBottom from './nobubar.png';\n\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  min-height: 100%; \n`;\n\n\nconst Container = styled.div`\nposition: relative;\ndisplay: flex;\nflex-direction: column;\npadding: 2rem;\nmax-width: 50em;\nbackground-color: rgba(255, 255, 255, 0.8);\nborder-radius: 15px;\nmargin: 0 auto;\n`;\n\nconst InputContainer = styled.div`\ndisplay: flex;\njustify-content: flex-start;\nalign-items: center;\nmargin-bottom: 1rem;\nwidth: 100%; /* add this line */\nmax-width: 25em; /* change from pixels to em */\n`;\n\nconst Label = styled.label`\n  margin-right: 1rem;\n`;\n\nconst Input = styled.input`\nwidth: 20em; \nmargin-right: 1rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 1rem;\n`;\n\nconst Result = styled.div`\n  margin-top: 1rem;\n`;\n\nconst FixedImage = styled.img`\n  position: fixed;\n  right: 0;\n  z-index: -1;\n  height: auto;\n  bottom: calc(5% - 32rem);\n`;\n\nconst Footer = styled.footer`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 2rem;\n  background-color: #f2f2f2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Link = styled.a`\n  color: #333;\n  text-decoration: none;\n  font-weight: bold;\n`;\n\ninterface Profile {\n  shotTime: number;\n  outputGrams: number;\n  inputGrams: number;\n  temperature: number;\n  grindSize: number;\n  pressure: number;\n  taste: string;\n  coffeeName: string;\n}\n\nconst App: React.FC = () => {\n  const [shotTime, setShotTime] = useState<number>(0);\n  const [outputGrams, setOutputGrams] = useState<number>(0);\n  const [inputGrams, setInputGrams] = useState<number>(0);\n  const [temperature, setTemperature] = useState<number>(90);\n  const [grindSize, setGrindSize] = useState<number>(0);\n  const [pressure, setPressure] = useState<number>(9);\n  const [taste, setTaste] = useState<string>('');\n  const [suggestion, setSuggestion] = useState<string>('');\n  const [profiles, setProfiles] = useState<Profile[]>([]);\n  const [coffeeName, setCoffeeName] = useState<string>('');\n\n  useEffect(() => {\n    const savedProfiles = JSON.parse(localStorage.getItem('espressoProfiles') || '[]');\n    setProfiles(savedProfiles);\n  }, []);\n\n  const saveProfile = () => {\n    const newProfile: Profile = { shotTime, outputGrams, inputGrams, temperature, grindSize, pressure, taste, coffeeName };\n    const updatedProfiles = [...profiles, newProfile];\n    setProfiles(updatedProfiles);\n    localStorage.setItem('espressoProfiles', JSON.stringify(updatedProfiles));\n  };\n\n  const handleTasteChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setTaste(e.target.value);\n    let suggestionText = '';\n\n    switch (e.target.value) {\n      case 'too_bitter':\n        suggestionText = 'Try a coarser grind size, lower temperature, or reduce pressure.';\n        break;\n      case 'too_sour':\n        suggestionText = 'Try a finer grind size, higher temperature, or increase pressure.';\n        break;\n      case 'no_crema':\n        suggestionText = 'Ensure your coffee is fresh, increase pressure, or try a finer grind size.';\n        break;\n      default:\n        suggestionText = '';\n    }\n\n    setSuggestion(suggestionText);\n  };\n\n  return (\n    <Wrapper>\n      <Container>\n        <h1>Espresso Shot Adjustments</h1>\n        <InputContainer>\n          <Label htmlFor=\"coffeeName\">Coffee Name:</Label>\n          <Input\n            id=\"coffeeName\"\n            type=\"text\"\n            value={coffeeName}\n            onChange={(e) => setCoffeeName(e.target.value)}\n          />\n        </InputContainer>\n        <InputContainer>\n          <Label htmlFor=\"shotTime\">Shot Time:</Label>\n          <Input\n            id=\"shotTime\"\n            type=\"number\"\n            value={shotTime}\n            onChange={(e) => setShotTime(parseFloat(e.target.value))}\n          />\n          <span>seconds</span>\n        </InputContainer>\n        <InputContainer>\n          <Label htmlFor=\"outputGrams\">Output Grams:</Label>\n          <Input\n            id=\"outputGrams\"\n            type=\"number\"\n            value={outputGrams}\n            onChange={(e) => setOutputGrams(parseFloat(e.target.value))}\n          />\n          <span>g</span>\n        </InputContainer>\n        <InputContainer>\n          <Label htmlFor=\"inputGrams\">Input Grams:</Label>\n          <Input\n            id=\"inputGrams\"\n            type=\"number\"\n            value={inputGrams}\n            onChange={(e) => setInputGrams(parseFloat(e.target.value))}\n          />\n          <span>g</span>\n        </InputContainer>\n        <InputContainer>\n          <Label htmlFor=\"waterTemperature\">Water Temperature:</Label>\n          <Input\n            id=\"waterTemperature\"\n            type=\"number\"\n            value={temperature}\n            onChange={(e) => setTemperature(parseFloat(e.target.value))}\n          />\n          <span>°C</span>\n        </InputContainer>\n        <InputContainer>\n          <Label htmlFor=\"pressure\">Pressure:</Label>\n          <Input\n            id=\"pressure\"\n            type=\"number\"\n            value={pressure}\n            onChange={(e) => setPressure(parseFloat(e.target.value))}\n          />\n          <span>bars</span>\n        </InputContainer>\n        <h3>Taste Feedback</h3>\n        <select value={taste} onChange={handleTasteChange}>\n          <option value=\"\">--Select--</option>\n          <option value=\"too_bitter\">Too bitter</option>\n          <option value=\"too_sour\">Too sour</option>\n          <option value=\"no_crema\">No crema</option>\n        </select>\n        <Result>\n          {suggestion && (\n            <>\n              <h4>Suggestion:</h4>\n              <p>{suggestion}</p>\n            </>\n          )}\n        </Result>\n        <Button onClick={saveProfile}>Save Profile</Button>\n        <h2>Saved Profiles</h2>\n        <ul>\n          {profiles.map((profile, index) => (\n            <li key={index}>\n              {`Shot Time: ${profile.shotTime}s, Output Grams: ${profile.outputGrams}g, Input Grams: ${profile.inputGrams}g, Temperature: ${profile.temperature}°C, Grind Size: ${profile.grindSize}, Pressure: ${profile.pressure} bars, Taste: ${profile.taste}`}\n            </li>\n          ))}\n        </ul>\n        <Footer>\n          <p>\n            Like this app? You can support me by donating on <Link href=\"https://ko-fi.com/stupidfatcat\" target=\"_blank\">Ko-fi</Link>!\n          </p>\n        </Footer>\n        <FixedImage src={logoBottom} alt=\"Your image description\" />\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}